{"version":3,"sources":["services/logs.js","services/activities.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","id","newLog","post","put","newActivity","delete","History","history","filter","setHistory","updateDate","historyObject","day","newDate","date","logService","now","console","log","map","oldObject","historyCopy","concat","reverse","activityName","toUpperCase","search","className","onClick","Date","toDateString","NewActivityButton","activities","setActivities","activity","length","activityObject","activityService","RemoveActivityButton","activityToRemove","activityObjectToRemove","ActivityButtons","App","useState","setFilter","useEffect","savedLogs","savedActivities","onChange","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.145af133.chunk.js","sourcesContent":["import axios from \"axios\"\r\nconst baseUrl = \"/api/logs\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst getCurrentTime = (id) => {\r\n    const request = axios.get(`${baseUrl}/now`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newLog => {\r\n    const request = axios.post(baseUrl, newLog)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newLog) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newLog)\r\n    return request.then(response => response.data)  \r\n}\r\n\r\nconst deleteAll = () => {\r\n    const request = axios.delete(baseUrl)\r\n}\r\nexport default {getAll, getCurrentTime, create, update, deleteAll}","import axios from \"axios\"\r\nconst baseUrl = \"/api/activities\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newActivity => {\r\n    const request = axios.post(baseUrl, newActivity)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteAll = () => {\r\n    const request = axios.delete(baseUrl)\r\n}\r\n\r\nconst deleteById = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\nexport default {getAll, create, deleteAll, deleteById}","import React, {useState, useEffect} from 'react'\nimport logService from \"./services/logs\"\nimport activityService from \"./services/activities\"\n\nconst History = ({history,filter,setHistory}) => {\n  const updateDate = (historyObject, day) => {\n    const newDate = historyObject.date+ day * 86400000 // 1 day in milliseconds\n    logService.getCurrentTime()\n      .then(response =>{\n        const now=response\n        console.log(now)\n        if(newDate <= now) //dont allow future dates\n        {\n         console.log(historyObject.id)\n         historyObject.date= newDate\n         logService.update(historyObject.id, historyObject);\n         setHistory(history.map(oldObject=>historyObject.id===oldObject.id ? \n           {...oldObject, date: historyObject.date}\n           : oldObject))\n   }\n      })\n    \n}\n  if(history){\n    let historyCopy = history.concat()\n    historyCopy.reverse()\n    return(\n      <>\n    <table id=\"history\">\n      <tbody>\n      {historyCopy.filter(historyObject => historyObject.activityName.toUpperCase().search(filter.toUpperCase())!==-1)\n        .map(historyObject =>  <tr key={historyObject.id}>\n      \n      <td className=\"history-date\">\n      <div className=\"group-arrow\">\n        <button className=\"icon-button-up\" onClick={()=>updateDate(historyObject,1)}>▲</button>\n        <button className=\"icon-button-down\" onClick={()=>updateDate(historyObject,-1)}>▼</button>\n      </div>\n      <div className=\"history-date-text\">{new Date(historyObject.date).toDateString()}</div>\n      </td>\n      <td className=\"history-activity\">\n      {historyObject.activityName}\n      </td>\n    </tr> )}\n    </tbody> \n</table>\n\n</>)\n}}\n\nconst NewActivityButton = ({newActivity, activities, setActivities}) => {\n  const onClick = () => {\n\n    if(newActivity){\n      const alreadyExists = activities.filter(activity => activity.activityName.toUpperCase() === newActivity.toUpperCase)\n      if (alreadyExists.length===0){      \n        const activityObject = {\n          activityName: newActivity,\n        }\n        activityService.create(activityObject)\n          .then(activity => {\n            activityObject.id = activity.id\n            setActivities(activities.concat(activityObject))\n         })\n      }\n    }\n  }\n  return <button className=\"new-activity\" onClick={()=>onClick()}>+New Activity</button>\n}\n\nconst RemoveActivityButton = ({activityToRemove, activities, setActivities}) => {\n  const onClick = () => {\n    if(activityToRemove){\n      const activityObjectToRemove = activities.filter(activity => activityToRemove.toUpperCase() ===activity.activityName.toUpperCase())\n      if(activityObjectToRemove[0]){\n      activityService.deleteById(activityObjectToRemove[0].id)\n        .then(() => {\n          setActivities(activities.filter(activity => activityObjectToRemove[0].activityName!== activity.activityName))\n        })\n      }\n     }\n  }\n  return <button className=\"remove-activity\" onClick={()=>onClick()}>-Remove Activity</button>\n}\nconst ActivityButtons = ({activities, setActivities, filter, history, setHistory}) => {\n\n  const onClick = (activity)=>{\n    const historyObject = {\n      activityName: activity,\n    }\n    logService.create(historyObject)\n      .then(log => {\n        historyObject.date=log.date\n        historyObject.id = log.id\n        console.log(historyObject.id)\n        setHistory(history.concat(historyObject))\n      })\n  }\n  //  if(filter){\n  //    setActivities(activities.filter(activity => activity.activityName.toUpperCase().search(filter.toUpperCase())!==-1))\n  //  }\n  return(\n  <div className=\"activity-buttons\">\n    {activities.map((activity) => <button key={activity.id} onClick={()=>onClick(activity.activityName)}>{activity.activityName}</button>)}\n  </div>\n  )\n}\nconst App = () => {\n  const [filter, setFilter] = useState(\"\")\n  const [history, setHistory]=useState([])\n  const [activities, setActivities]= useState([])\n  useEffect(() => {\n    logService\n      .getAll()\n      .then(savedLogs => {\n        setHistory(savedLogs)\n      })\n  }, [])\n  useEffect(() => {\n    activityService\n      .getAll()\n      .then(savedActivities => {\n        console.log(savedActivities.length)\n        if(savedActivities.length>0){\n          setActivities(savedActivities)\n        }\n      })\n  }, [])\n\n    return (\n    <>\n      <h1>Activity Logger</h1>\n    <div className=\"filter\">\n      1. Enter activity name to search existing logs, or to add/remove an activity type. <br></br>\n      2. Press the activity's button to create a new log. <br></br>\n      <input className=\"filter-bar\" onChange={(event)=>setFilter(event.target.value)}></input>\n      <div className=\"edit-activities\">\n        <NewActivityButton newActivity={filter} activities={activities} setActivities={setActivities}></NewActivityButton>\n        <RemoveActivityButton activityToRemove={filter} activities={activities} setActivities={setActivities}></RemoveActivityButton>\n      </div>\n      <ActivityButtons activities={activities} setActivities={setActivities} filter={filter} history={history} setHistory={setHistory}></ActivityButtons>\n      <History history={history} filter={filter} setHistory={setHistory}></History>\n      \n      </div>\n    </>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport \"./index.css\"\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}